// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMediaApp.Persistencia.Data;

#nullable disable

namespace SocialMediaApp.Persistencia.Migrations
{
    [DbContext(typeof(SocialMediaDBContext))]
    [Migration("20241109234009_CrearTablaNotificaciones")]
    partial class CrearTablaNotificaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Amistade", b =>
                {
                    b.Property<int>("AmistadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AmistadID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmistadId"));

                    b.Property<int?>("AmigoId")
                        .HasColumnType("int")
                        .HasColumnName("AmigoID");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaAceptacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("AmistadId")
                        .HasName("PK__Amistade__8668448B2952CBB0");

                    b.HasIndex("AmigoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Amistades");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.AutenticacionSocial", b =>
                {
                    b.Property<int>("AutenticacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AutenticacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutenticacionId"));

                    b.Property<DateTime?>("FechaAutenticacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("AutenticacionId")
                        .HasName("PK__Autentic__3E8C6FA3004D9DAE");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AutenticacionSocial", (string)null);
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComentarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"));

                    b.Property<DateTime?>("FechaComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("int")
                        .HasColumnName("PublicacionID");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("ComentarioId")
                        .HasName("PK__Comentar__F184495802EA4568");

                    b.HasIndex("PublicacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaEvento")
                        .HasColumnType("datetime");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("EventoId")
                        .HasName("PK__Eventos__1EEB5901A310BA9D");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.InvitadosEvento", b =>
                {
                    b.Property<int>("InvitadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvitadoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvitadoId"));

                    b.Property<string>("Confirmacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("EventoID");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("InvitadoId")
                        .HasName("PK__Invitado__5144C1941D875E94");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("InvitadosEvento", (string)null);
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Mensaje", b =>
                {
                    b.Property<int>("MensajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MensajeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MensajeId"));

                    b.Property<int?>("EmisorId")
                        .HasColumnType("int")
                        .HasColumnName("EmisorID");

                    b.Property<bool?>("EsLeido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("FechaEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MensajeTexto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptorId")
                        .HasColumnType("int")
                        .HasColumnName("ReceptorID");

                    b.HasKey("MensajeId")
                        .HasName("PK__Mensajes__FEA0557F6F54DB16");

                    b.HasIndex("EmisorId");

                    b.HasIndex("ReceptorId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Notificacione", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacionId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsLeida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("NotificacionId")
                        .HasName("PK__Notifica__BCC120C4A59726B8");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificacione");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PagoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PagoId")
                        .HasName("PK__Pagos__F00B6158AB8AC44C");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.ProveedorAutenticacion", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProveedorId")
                        .HasName("PK__Proveedo__61266BB9537BCCCD");

                    b.HasIndex(new[] { "NombreProveedor" }, "UQ__Proveedo__C20DF553C1C4B278")
                        .IsUnique();

                    b.ToTable("ProveedorAutenticacion", (string)null);
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Publicacione", b =>
                {
                    b.Property<int>("PublicacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PublicacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicacionId"));

                    b.Property<string>("Enlace")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PublicacionId")
                        .HasName("PK__Publicac__10DF15AA45ECF1BE");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Reaccione", b =>
                {
                    b.Property<int>("ReaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReaccionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReaccionId"));

                    b.Property<int?>("PublicacionId")
                        .HasColumnType("int")
                        .HasColumnName("PublicacionID");

                    b.Property<string>("TipoReaccion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("ReaccionId")
                        .HasName("PK__Reaccion__EAF7E4CA620954E5");

                    b.HasIndex("PublicacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reacciones");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.RecuperacionContrasena", b =>
                {
                    b.Property<int>("RecuperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecuperacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecuperacionId"));

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("RecuperacionId")
                        .HasName("PK__Recupera__32BA9F434B131F7F");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RecuperacionContrasena", (string)null);
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("EsPremium")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FotoPerfil")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Intereses")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE79858DC9012");

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__Usuarios__6B0F5AE0E5711640")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Usuarios__A9D105349BFFA09A")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Amistade", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Amigo")
                        .WithMany("AmistadeAmigos")
                        .HasForeignKey("AmigoId")
                        .HasConstraintName("FK__Amistades__Amigo__5BE2A6F2");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("AmistadeUsuarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Amistades__Usuar__5AEE82B9");

                    b.Navigation("Amigo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.AutenticacionSocial", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.ProveedorAutenticacion", "Proveedor")
                        .WithMany("AutenticacionSocials")
                        .HasForeignKey("ProveedorId")
                        .HasConstraintName("FK__Autentica__Prove__534D60F1");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("AutenticacionSocials")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Autentica__Usuar__52593CB8");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Comentario", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Publicacione", "Publicacion")
                        .WithMany("Comentarios")
                        .HasForeignKey("PublicacionId")
                        .HasConstraintName("FK__Comentari__Publi__6477ECF3");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Comentari__Usuar__656C112C");

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Evento", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Eventos__Usuario__778AC167");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.InvitadosEvento", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Evento", "Evento")
                        .WithMany("InvitadosEventos")
                        .HasForeignKey("EventoId")
                        .HasConstraintName("FK__Invitados__Event__7B5B524B");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("InvitadosEventos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Invitados__Usuar__7C4F7684");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Mensaje", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Emisor")
                        .WithMany("MensajeEmisors")
                        .HasForeignKey("EmisorId")
                        .HasConstraintName("FK__Mensajes__Emisor__6D0D32F4");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Receptor")
                        .WithMany("MensajeReceptors")
                        .HasForeignKey("ReceptorId")
                        .HasConstraintName("FK__Mensajes__Recept__6E01572D");

                    b.Navigation("Emisor");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Notificacione", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Notificacione")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Notificac__Usuar__72C60C4A");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Pago", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Pagos__UsuarioID__00200768");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Publicacione", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Publicaciones")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Publicaci__Usuar__60A75C0F");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Reaccione", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Publicacione", "Publicacion")
                        .WithMany("Reacciones")
                        .HasForeignKey("PublicacionId")
                        .HasConstraintName("FK__Reaccione__Publi__693CA210");

                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("Reacciones")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Reaccione__Usuar__6A30C649");

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.RecuperacionContrasena", b =>
                {
                    b.HasOne("SocialMediaApp.Persistencia.Data.Usuario", "Usuario")
                        .WithMany("RecuperacionContrasenas")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Recuperac__Usuar__571DF1D5");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Evento", b =>
                {
                    b.Navigation("InvitadosEventos");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.ProveedorAutenticacion", b =>
                {
                    b.Navigation("AutenticacionSocials");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Publicacione", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Reacciones");
                });

            modelBuilder.Entity("SocialMediaApp.Persistencia.Data.Usuario", b =>
                {
                    b.Navigation("AmistadeAmigos");

                    b.Navigation("AmistadeUsuarios");

                    b.Navigation("AutenticacionSocials");

                    b.Navigation("Comentarios");

                    b.Navigation("Eventos");

                    b.Navigation("InvitadosEventos");

                    b.Navigation("MensajeEmisors");

                    b.Navigation("MensajeReceptors");

                    b.Navigation("Notificacione");

                    b.Navigation("Pagos");

                    b.Navigation("Publicaciones");

                    b.Navigation("Reacciones");

                    b.Navigation("RecuperacionContrasenas");
                });
#pragma warning restore 612, 618
        }
    }
}
